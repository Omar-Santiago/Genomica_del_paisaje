# Install required packages
wingen_packages()
library(wingen)
library(raster)
library(sp)
library(raster)
library(terra)
library(ggplot2)
library(sf)
#
##### cargar datos ####
coord <- read.csv("F:/fenotipo_ambiente/ambiente/Qgis (1)/ind_gbs_coord.csv")
puntos <- st_as_sf(coord, coords = c("longitude", "latitude"), crs = "+proj=longlat")
puntos_proj <- st_transform(puntos, crs = 6369)
print(puntos_proj)
# raster para las ventanas deslizantes
liz_lyr <- coords_to_raster(puntos_proj, res = 250, buffer = 5, plot = TRUE)
# raster para las ventanas deslizantes
liz_lyr <- coords_to_raster(puntos_proj, res = 250, buffer = 1, plot = TRUE)
# vemos el ancho de la venta que se usara para los calculos
sample_count <- preview_gd(liz_lyr, puntos_proj, wdim = 3, fact = 0)
# vemos el ancho de la venta que se usara para los calculos
sample_count <- preview_gd(liz_lyr, puntos_proj, wdim = 1, fact = 0)
# vemos el ancho de la venta que se usara para los calculos
sample_count <- preview_gd(liz_lyr, puntos_proj, wdim = 2, fact = 0)
# vemos el ancho de la venta que se usara para los calculos
sample_count <- preview_gd(liz_lyr, puntos_proj, wdim = 3, fact = 0)
# raster para las ventanas deslizantes
liz_lyr <- coords_to_raster(puntos_proj, res = 90, buffer = 1, plot = TRUE)
# vemos el ancho de la venta que se usara para los calculos
sample_count <- preview_gd(liz_lyr, puntos_proj,
method = "window" wdim = 3, fact = 0)
# vemos el ancho de la venta que se usara para los calculos
sample_count <- preview_gd(liz_lyr, puntos_proj,
method = "window", wdim = 3, fact = 0)
# Visualize the sample count layer
ggplot_count(sample_count)
library(vcfR)
library(adegenet)
library(ade4)
library(adegenet)
# realizamos el analis (especificar las medidad de diversidad genetica)
liz_vcf <- read.vcfR("F:/Gih/Genomica_del_paisaje/pasos_en_R/todas_muestras/muestras_paisaje.recode.vcf")
wgd <- window_gd(liz_vcf,
coords_proj,
liz_lyr,
stat = "pi",
wdim = 3,
fact = 0
)
rlang::last_trace()
# realizamos el analis (especificar las medidad de diversidad genetica)
liz_vcf <- "F:/Gih/Genomica_del_paisaje/pasos_en_R/todas_muestras/muestras_paisaje.recode.vcf"
wgd <- window_gd(liz_vcf,
coords_proj,
liz_lyr,
stat = "pi",
wdim = 3,
fact = 0
)
wgd <- window_gd(liz_vcf,
coords_proj,
liz_lyr,
stat = "pi",
wdim = 3,
fact = 0
)
# realizamos el analis (especificar las medidad de diversidad genetica)
liz_vcf <- read.vcfR("F:/Gih/Genomica_del_paisaje/pasos_en_R/todas_muestras/muestras_paisaje.recode.vcf")
liz_vcf@fix
liz_vcf@meta
liz_vcf@gt
G <- liz_vcf@gt
View(G)
G <- tab(liz_vcf@gt)
G <- liz_vcf@gt
tap(G)
tab(G)
tab(G)
colnames(G)
tab()wgd <- window_gd(liz_vcf,
wgd <- window_gd(liz_vcf,
puntos_proj,
liz_lyr,
stat = "pi",
wdim = 3,
fact = 0
)
# Plot map of pi
ggplot_gd(wgd, bkg = envlayer) + ggtitle("Moving window pi")
# Plot map of pi
ggplot_gd(wgd) + ggtitle("Moving window pi")
# cargamos un shape del desierto de los leones
map_dir <- "F:/fenotipo_ambiente/ambiente/Qgis (1)/Temp_suelo/mayo_2018.tif"
map_vec_sf <-  sf::st_read(map_dir)
map_vec_sf <-  rast(map_dir)
map_vec_sf <-  raster(map_dir)
map_vec_sf <-  raster(map_dir)
library(raster)
##### Paquetes ####
#vamos a usar algtr
library(algatr)
# Install required packages
#wingen_packages()
library(wingen)
library(sp)
library(raster)
library(terra)
library(ggplot2)
library(sf)
library(vcfR)
library(ade4)
library(adegenet)
#
# cargar datos geograficos
coord <- read.csv("F:/fenotipo_ambiente/ambiente/Qgis (1)/ind_gbs_coord.csv")
puntos <- st_as_sf(coord, coords = c("longitude", "latitude"), crs = "+proj=longlat")
puntos_proj <- st_transform(puntos, crs = 6369)
print(puntos_proj)
# cargamos un shape del desierto de los leones
map_dir <- "F:/fenotipo_ambiente/ambiente/Qgis (1)/Temp_suelo/mayo_2018.tif"
map_vec_sf <-  raster(map_dir)
# cargamos datoraster()# cargamos datos geneticos
vcfR_paisaje <- read.vcfR("F:/Gih/Genomica_del_paisaje/pasos_en_R/todas_muestras/muestras_paisaje.recode.vcf")
# raster para las ventanas deslizantes
liz_lyr <- coords_to_raster(puntos_proj, res = 90, buffer = 1, plot = TRUE)
# vemos el ancho de la venta que se usara para los calculos
sample_count <- preview_gd(liz_lyr, puntos_proj,
method = "window", wdim = 3, fact = 0)
# Visualize the sample count layer
ggplot_count(sample_count)
# realizamos el analis (especificar las medidad de diversidad genetica)
liz_vcf <- read.vcfR("F:/Gih/Genomica_del_paisaje/pasos_en_R/todas_muestras/muestras_paisaje.recode.vcf")
# realizamos las estimacion de la diversidad
wgd <- window_gd(liz_vcf,
puntos_proj,
liz_lyr,
stat = "pi",
wdim = 3,
fact = 0
)
# Plot map of pi
ggplot_gd(wgd) + ggtitle("Moving window pi")
# realizamos las estimacion de la diversidad
wgd <- window_gd(liz_vcf,
puntos_proj,
liz_lyr,
stat = "pi",
wdim = 3,
fact = 0
)
# Plot map of pi
ggplot_gd(wgd) + ggtitle("Moving window pi")
# Reproject to same crs as the projected coordinates
envlayer <- project(map_vec_sf, crs(puntos_proj))
# cargamos un shape del desierto de los leones
map_dir <- "F:/fenotipo_ambiente/ambiente/Qgis (1)/Temp_suelo/mayo_2018.tif"
map_vec_sf <-  raster(map_dir)
map_vec_sf <- aggregate(map_vec_sf)
envlayer <- projectRaster(map_vec_sf,  crs = 6369)
# Plot map of pi
ggplot_gd(wgd, bkg = envlayer) + ggtitle("Moving window pi")
# Plot map of pi
ggplot_gd(wgd) + ggtitle("Moving window pi")
# hacemos interpolacion
kgd <- krig_gd(wgd, index = 1:2, liz_lyr, disagg_grd = 5)
summary(kgd)
ggplot_gd(kgd) + ggtitle("Kriged pi")
# realizamos las estimacion de la diversidad
wgd <- window_gd(liz_vcf,
puntos_proj,
liz_lyr,
stat = c("pi", "Ho", "allelic_richness", "biallelic_richness", "basic_stats"),
wdim = 3,
fact = 0
)
View(wgd)
# Plot map of pi
ggplot_gd(wgd$Ho) + ggtitle("Moving window pi")
# Plot map of pi
ggplot_gd(wgd$biallelic_richness) + ggtitle("Moving window pi")
# Plot map of pi
ggplot_gd(wgd$Fis_hierfstat) + ggtitle("Moving window pi")
# Plot map of pi
ggplot_gd(wgd$Ht_hierfstat) + ggtitle("Moving window pi")
wgd$Ht_hierfstat
# Plot map of pi
ggplot_gd(wgd$Ht_hierfstat) + ggtitle("Moving window pi")
##### Paquetes ####
#vamos a usar algtr
library(algatr)
# Install required packages
#wingen_packages()
library(wingen) # no se que estimadores usa
library(sp)
library(raster)
library(terra)
library(ggplot2)
library(sf)
library(vcfR)
library(ade4)
library(adegenet) # versiones mas recientes usan pegas para diversidad
library(hierfstat) # estimaciones de diversidad genetica
# Plot map of pi
ggplot_gd(wgd$Ht_hierfstat) + ggtitle("Moving window pi")
View(wgd)
##### diversidad genetica en el espacio #####
# cargar datos geograficos
coord <- read.csv("F:/fenotipo_ambiente/ambiente/Qgis (1)/ind_gbs_coord.csv")
puntos <- st_as_sf(coord, coords = c("longitude", "latitude"), crs = "+proj=longlat")
puntos_proj <- st_transform(puntos, crs = 6369)
print(puntos_proj)
# cargamos un shape del desierto de los leones
map_dir <- "F:/fenotipo_ambiente/ambiente/Qgis (1)/Temp_suelo/mayo_2018.tif"
map_vec_sf <-  raster(map_dir)
envlayer <- projectRaster(map_vec_sf,  crs = 6369)
# cargamos datoraster()# cargamos datos geneticos
vcfR_paisajeisaje <- read.vcfR("F:/Gih/Genomica_del_paisaje/pasos_en_R/todas_muestras/muestras_paisaje.recode.vcf")
# raster para las ventanas deslizantes
liz_lyr <- coords_to_raster(puntos_proj, res = 90, buffer = 1, plot = TRUE)
# vemos el ancho de la venta que se usara para los calculos
sample_count <- preview_gd(liz_lyr, puntos_proj,
method = "window", wdim = 3, fact = 0)
# Visualize the sample count layer
ggplot_count(sample_count)
# realizamos el analis (especificar las medidad de diversidad genetica)
liz_vcf <- read.vcfR("F:/Gih/Genomica_del_paisaje/pasos_en_R/todas_muestras/muestras_paisaje.recode.vcf")
stat = c(biallelic_richness"),
# realizamos las estimacion de la diversidad
wgd <- window_gd(liz_vcf,
puntos_proj,
liz_lyr,
stat = "biallelic_richness",
# realizamos las estimacion de la diversidad
wgd <- window_gd(liz_vcf,
puntos_proj,
liz_lyr,
stat = "biallelic_richness",
wdim = 3,
fact = 0
)
# Plot map of pi
ggplot_gd(wgd$biallelic_richness) + ggtitle("Moving window pi")
wgd$biallelic_richness
View(wgd)
##### diversidad genetica en el espacio #####
# cargar datos geograficos
coord <- read.csv("F:/fenotipo_ambiente/ambiente/Qgis (1)/ind_gbs_coord.csv")
library(dartRverse)
#
##### diversidad genetica ######
vcfR_paisajeisaje <- read.vcfR("F:/Gih/Genomica_del_paisaje/pasos_en_R/todas_muestras/muestras_paisaje.recode.vcf")
genl <- vcfR2genlight(vcfR_paisajeisaje)
gn <- gl2gi(genl)
library(dartR)
gn <- gl2gi(genl)
pai_hier <- genind2hierfstat(gn)
??genind2hierfstat
library(hierfstat) # estimaciones de diversidad genetica
pai_hier <- genind2hierfstat(gn)
View(coord)
pop(vcfR_paisajeisaje) <- coord$pop
pop(genl) <- coord$pop
gn <- gl2gi(genl)
pai_hier <- genind2hierfstat(gn)
??allelic.richness
#calculate allelic richness
ar <- allelic.richness(pai_hier)
summary(ar$Ar)
# Calculates basic statistics for each loci (Hs, Ho, Fis etc.) dartR
bs_psj <- gl.basic.stats(genl, digits = 4, verbose = 3)
View(bs_psj)
bs_psj
coord <- read.csv("F:/fenotipo_ambiente/ambiente/Qgis (1)/ind_gbs_coord.csv")
coord <- read.csv("F:/fenotipo_ambiente/ambiente/Qgis (1)/ind_gbs_coord.csv")
pop(genl) <- coord$ozono
gn <- gl2gi(genl)
pai_hier <- genind2hierfstat(gn)
#calculate allelic richness ## no funciona
ar <- allelic.richness(pai_hier)
summary(ar$Ar)
ar <- as.data.frame(ar$Ar)
mean.ar <- colMeans(ar)
mean.ar
# Calculate a measure of variance for allelic richness, e.g. standard error.
# Standard error = standard deviation / sqrt(n), where n is the number of genotyped loci
sd(ar$`0%`, na.rm=TRUE)/sqrt(nrow(ar) - length(which(is.na(ar$`0%`))))
View(ar)
boxplot(ar, ylab="Allelic richness", las=2, col=tascols)
# Boxplot of allelic richness per population:
#first, extend the margins of the graphing window to fit long axis labels
#west = yellow; central = blue; east = green; insurance population/Maria Island = orange
tascols <- c("skyblue", "#74c476", "skyblue", "#74c476", "#FDD835", "orange", "skyblue",
"orange", "skyblue", "#FDD835", "skyblue", "#74c476", "#74c476", "#FDD835",
"#74c476")
boxplot(ar, ylab="Allelic richness", las=2, col=tascols)
par(mar=c(8,3,3,3))
boxplot(ar, ylab="Allelic richness", las=2, col=tascols)
boxplot(ar, ylab="Allelic richness", las=2, col=tascols)
boxplot(ar, ylab="Allelic richness", las=2, col=tascols)
# Boxplot of allelic richness per population:
#first, extend the margins of the graphing window to fit long axis labels
#west = yellow; central = blue; east = green; insurance population/Maria Island = orange
tascols <- c("skyblue", "#74c476", "#FDD835", "orange", "skyblue")
boxplot(ar, ylab="Allelic richness", las=2, col=tascols)
hets <- gl.report.heterozygosity(genl, method="pop",plot.colors.pop = tascols)
hets <- gl.report.heterozygosity(genl, method="pop", colors = tascols)
hets <- gl.report.heterozygosity(genl, method="pop", plot_colors_pop = tascols)
genl <- gl.read.vcf(vcfR_paisajeisaje)
#
##### preparar datos ######
vcfR_paisajeisaje <- read.vcfR("F:/Gih/Genomica_del_paisaje/pasos_en_R/todas_muestras/muestras_paisaje.recode.vcf")
genl <- gl.read.vcf(vcfR_paisajeisaje)
#
##### preparar datos ######
vcfR_paisajeisaje <- "F:/Gih/Genomica_del_paisaje/pasos_en_R/todas_muestras/muestras_paisaje.recode.vcf"
genl <- gl.read.vcf(vcfR_paisajeisaje)
coord <- read.csv("F:/fenotipo_ambiente/ambiente/Qgis (1)/ind_gbs_coord.csv")
pop(genl) <- coord$ozono
hets <- gl.report.heterozygosity(genl, method="pop", plot_colors_pop = tascols)
hets <- gl.report.heterozygosity(genl, method="pop", plot_colors_pop = tascols)
tascols <- c("skyblue", "#74c476", "#FDD835", "orange")
hets <- gl.report.heterozygosity(genl, method="pop", plot_colors_pop = tascols)
# ahora lo realizamos a nivel individual
ind.hets <- gl.report.heterozygosity(genl, method="ind")
##### Paquetes ####
#vamos a usar algtr
library(algatr)
# Install required packages
#wingen_packages()
library(wingen) # no se que estimadores usa
library(sp)
library(raster)
library(terra)
library(ggplot2)
library(sf)
library(vcfR)
library(ade4)
library(adegenet) # versiones mas recientes usan pegas para diversidad
library(hierfstat) # estimaciones de diversidad genetica
library(dartR)
#
##### preparar datos ######
vcfR_paisajeisaje <- "F:/Gih/Genomica_del_paisaje/pasos_en_R/todas_muestras/muestras_paisaje.recode.vcf"
genl <- gl.read.vcf(vcfR_paisajeisaje)
coord <- read.csv("F:/fenotipo_ambiente/ambiente/Qgis (1)/ind_gbs_coord.csv")
pop(genl) <- coord$ozono
gn <- gl2gi(genl)
pai_hier <- genind2hierfstat(gn)
tascols <- c("skyblue", "#74c476", "#FDD835", "orange")
#
##### calculate allelic richness ####
ar <- allelic.richness(pai_hier)
summary(ar$Ar)
ar <- as.data.frame(ar$Ar)
mean.ar <- colMeans(ar)
mean.ar
# Calculate a measure of variance for allelic richness, e.g. standard error.
# Standard error = standard deviation / sqrt(n), where n is the number of genotyped loci
sd(ar$`0%`, na.rm=TRUE)/sqrt(nrow(ar) - length(which(is.na(ar$`0%`))))
# Boxplot of allelic richness per population:
#first, extend the margins of the graphing window to fit long axis labels
#west = yellow; central = blue; east = green; insurance population/Maria Island = orange
boxplot(ar, ylab="Allelic richness", las=2, col=tascols)
View(ar)
summary(ar$Ar)
#
##### calculate allelic richness ####
ar <- allelic.richness(pai_hier)
View(ar)
ar[["min.all"]]
summary(ar$Ar)
ar <- as.data.frame(ar$Ar)
summary(ar$Ar)
ar <- as.data.frame(ar$Ar)
mean.ar <- colMeans(ar)
mean.ar
#
##### calculate allelic richness ####
ar <- allelic.richness(pai_hier)
summary(ar$Ar)
ar <- as.data.frame(ar$Ar)
mean.ar <- colMeans(ar)
mean.ar
# Cargar paquetes necesarios
library(ggplot2)  # Para graficar
library(car)      # Para la prueba de Levene
library(carData)
library(car)      # Para la prueba de Levene
# Crear datos simulados
set.seed(123)  # Para reproducibilidad
datos <- data.frame(
Habitat = rep(c("Bosque Seco", "Bosque Húmedo", "Bosque Nublado"), each = 10),
Peso = c(rnorm(10, mean = 18, sd = 2),  # Bosque Seco
rnorm(10, mean = 22, sd = 2),  # Bosque Húmedo
rnorm(10, mean = 20, sd = 2))  # Bosque Nublado
)
# Ver los primeros datos
head(datos)
View(datos)
# Crear datos simulados
datos <- data.frame(
Habitat = rep(c("Bosque Seco", "Bosque Húmedo"), each = 15),
Peso = c(rnorm(15, mean = 18, sd = 2),  # Bosque Seco
rnorm(15, mean = 22, sd = 2))  # Bosque Húmedo
)
# Ver los primeros datos
head(datos)
# Crear un dataset con pesos antes y después de la temporada de lluvias
datos_pareados <- data.frame(
ID = 1:15,  # Identificación de cada murciélago
Antes = rnorm(15, mean = 20, sd = 2),  # Peso antes de la lluvia
Despues = rnorm(15, mean = 21, sd = 2) # Peso después de la lluvia
)
# Ver los primeros datos
head(datos_pareados)
View(datos_pareados)
shapiro.test(ar$`0%` ~ ar$`10%`)
shapiro.test(ar$`0%` - ar$`10%`)
shapiro.test(ar$`0%` - ar$`10_40%`)
shapiro.test(ar$`0%` - ar$`40_70%`)
shapiro.test(ar$`10%` - ar$`10_40%`)
shapiro.test(ar$`10%` - ar$`40_70%`)
shapiro.test(ar$`10_40%` - ar$`40_70%`)
# todos son normales
t.test(ar$`0%` - ar$`10%`, paired = TRUE)
# todos son normales
t.test(ar$`0%`, ar$`10%`, paired = TRUE)
t.test(ar$`0%`, ar$`10_40%`, paired = TRUE)
summary(ar$Ar)
hets <- gl.report.heterozygosity(genl, method="pop", plot_colors_pop = tascols)
View(hets)
# ahora lo realizamos a nivel individual
ind.hets <- gl.report.heterozygosity(genl, method="ind")
basicstats <- utils.basic.stats(genl)
View(basicstats)
basicstats[["overall"]]
##### Paquetes ####
remotes::install_github("hemstrow/snpR")
library(snpR)
View(ind.hets)
##### diversidad genetica en el espacio #####
# cargar datos geograficos
coord <- read.csv("F:/fenotipo_ambiente/ambiente/Qgis (1)/ind_gbs_coord.csv")
puntos <- st_as_sf(coord, coords = c("longitude", "latitude"), crs = "+proj=longlat")
puntos_proj <- st_transform(puntos, crs = 6369)
print(puntos_proj)
# cargamos un shape del desierto de los leones
map_dir <- "F:/fenotipo_ambiente/ambiente/Qgis (1)/Temp_suelo/mayo_2018.tif"
map_vec_sf <-  raster(map_dir)
envlayer <- projectRaster(map_vec_sf,  crs = 6369)
# cargamos datoraster()# cargamos datos geneticos
vcfR_paisajeisaje <- read.vcfR("F:/Gih/Genomica_del_paisaje/pasos_en_R/todas_muestras/muestras_paisaje.recode.vcf")
# raster para las ventanas deslizantes
liz_lyr <- coords_to_raster(puntos_proj, res = 90, buffer = 1, plot = TRUE)
# vemos el ancho de la venta que se usara para los calculos
sample_count <- preview_gd(liz_lyr, puntos_proj,
method = "window", wdim = 3, fact = 0)
# Visualize the sample count layer
ggplot_count(sample_count)
# realizamos el analis (especificar las medidad de diversidad genetica)
liz_vcf <- read.vcfR("F:/Gih/Genomica_del_paisaje/pasos_en_R/todas_muestras/muestras_paisaje.recode.vcf")
# realizamos las estimacion de la diversidad
wgd <- window_gd(liz_vcf,
puntos_proj,
liz_lyr,
stat = c("allelic_richness", "basic_stats"),
wdim = 3,
fact = 0
)
# Plot map of allelic_richness
ggplot_gd(wgd$allelic_richness) + ggtitle("allelic richness")
wgd$biallelic_richness
# hacemos interpolacion
kgd <- krig_gd(wgd$allelic_richness, index = 1:2, liz_lyr, disagg_grd = 5)
summary(kgd)
ggplot_gd(kgd) + ggtitle("Kriged Ar")
# Plot map of Ho_hierfstat
ggplot_gd(wgd$Ho_hierfstat) + ggtitle("Ho_hierfstat")
# hacemos interpolacion
kgd2 <- krig_gd(wgd$Ho_hierfstat, index = 1:2, liz_lyr, disagg_grd = 5)
summary(kgd2)
ggplot_gd(kgd2) + ggtitle("Kriged Ho_hierfstat")
# Plot map of Ho_hierfstat
ggplot_gd(wgd$Hs_hierfstat) + ggtitle("Hs_hierfstat")
# hacemos interpolacion
kgd3 <- krig_gd(wgd$Hs_hierfstat, index = 1:2, liz_lyr, disagg_grd = 5)
summary(kgd3)
ggplot_gd(kgd3) + ggtitle("Kriged Hs_hierfstat")
# Plot map of Ho_hierfstat
ggplot_gd(wgd$Ht_hierfstat) + ggtitle("Ht_hierfstat")
# hacemos interpolacion
kgd4 <- krig_gd(wgd$Ht_hierfstat, index = 1:2, liz_lyr, disagg_grd = 5)
summary(kgd4)
ggplot_gd(kgd4) + ggtitle("Kriged Ht_hierfstat")
# realizamos las estimacion de la diversidad
# se deben tener minimo dos individuos para estimar la diversidad, de los contrario
# se producen NAs, en nuesstro caso asi pasa.
wgd <- window_gd(liz_vcf,
puntos_proj,
liz_lyr,
stat = c("allelic_richness"),
wdim = 3,
fact = 0,
min_n = 1
)
# Plot map of allelic_richness
ggplot_gd(wgd$allelic_richness) + ggtitle("allelic richness")
# hacemos interpolacion
kgd <- krig_gd(wgd$allelic_richness, index = 1:2, liz_lyr, disagg_grd = 5)
summary(kgd)
ggplot_gd(kgd) + ggtitle("Kriged Ar")
